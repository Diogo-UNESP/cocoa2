#ifndef __COSMOLIKE_CLUSTER_UTIL_H
#define __COSMOLIKE_CLUSTER_UTIL_H
#ifdef __cplusplus
extern "C" {
#endif

// ---------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------
// CLUSTER PROBABILITIES BINNED IN LAMBDA_OBS
// ---------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------
// Threading is not allowed even w/ loop unrolling unless nl is fixed


// \int_(bin_obs_lambda_min)^(bin_obs_lambda_max) \dlambda_obs P(\lambda_obs|M)
// (see for example https://arxiv.org/pdf/1810.09456.pdf - eq3 qnd 6) 
double binned_P_obs_lambda_given_M_nointerp(int nl, double mass, double z);

// Threading this function is not allowed (unless nl is fixed) 
double binned_P_lambda_obs_given_M(int nl, double M, double z); 

// ---------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------
// CLUSTER BIAS
// ---------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------

double weighted_bias_nointerp(int nl, double z);

double weighted_bias(int nlambda, double z);

// ----------------------------------------------------------------------------
// ----------------------------------------------------------------------------
// ----------------------------------------------------------------------------
// cluster number counts
// ----------------------------------------------------------------------------
// ----------------------------------------------------------------------------
// ----------------------------------------------------------------------------

double binned_average_number_counts(int nl, double z); // nl = lambda_obs bin

// ---------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------
// CLUSTER POWER SPECTRUM AND CROSS SPECTRUM (WITH GALAXIES AND MATTER)
// ---------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------

// nl{1,2} = lambda_obs bins, n{i,j} = cluster redshift bins
double binned_p_cc(double k, double a, int nl1, int nl2, int use_linear_ps);

// nl = lambda_obs bin, nj = galaxy redshift bin
double binned_p_cg(double k, double a, int nl, int nj, int use_linear_ps);

// nl = lambda_obs bin, ni = cluster redshift bin, nj = source redshift bin
double binned_p_cm(double k, double a, int nl, int use_linear_ps);

// ---------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------
// Area
// ---------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------

double get_area(double z);

// ---------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------
// SETUP
// ---------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------
// Cocoa: we try to avoid reading of files in the cosmolike_core code 
// Cocoa: (reading is done in the C++/python interface)

void setup_SDSS_P_lambda_obs_given_true_lambda(int* io_nz, double** io_z, int* io_nlambda, 
double** io_lambda, double** io_tau, double** io_mu, double** io_sigma, double** io_fmask, 
double** io_fprj, int io);

void setup_SDSS_P_true_lambda_given_mass(int* io_nintrinsic_sigma,  double** io_intrinsic_sigma, 
int* io_natsrgm, double** io_atsrgm, double** io_alpha, double** io_sigma, int io);

void setup_get_area(int* io_nz, double** io_z, double** io_A, int io);

#ifdef __cplusplus
}
#endif
#endif // HEADER GUARD